

inheritance:
single table
joined table <----
table per class

sql in entity class:
* insert:
    x insert into tablename (cloumn1,...) values (?,...); //single class without inheritance and foreign keys
    x save primary key
        insert into parent_tablename (column1,...) values (?,...);
        ...
        insert into child_tablename (column1,...) values (?,...);
    * with fk
        first insert all other values
* update
    x update tablename set column=? where pk = ?;
    x with inheritance
        update parent_tablename set column=? where pk = ?;
        update child_tablename set column=? where pk = ?;
    * with fk
        update first all other values
* select
    x select column,... from tablename;
    * with inheritance
        select column,... from parent_tablename
        join child_tablename
        on parent_tablename.primarykey = child_tablename.primarykey;
    x with foreign key
        nach select alle anderen durch ein get<Object>(pk)
* delete
    x delete from tablename where pk = ?;
    * "von unten nach oben löschen"
    * überlegen ob fks löschen


---------------------------------------------------------
one to many

table 1 : 1 ------- n : table 2
@fk(remotetable=table2,remotecolumnname=fk)
list<table2>
for i in table2s :  insert into table2 values (this.pk, table2values)
select * from table2 where fk = this.pk

---------------------------------------------------------
done
many to one

table 1 : n ------- 1 : table 2
table2

---------------------------------------------------------
many to many

table 1 : m ------- n : table 2
@fk(remotetable=middletable,remotecolumnname=fk)
list<table2>
for i in table2s :  insert into middletable values (this.pk, table2.pk)
list of keys = select table2fk from middletable where table1fk = this.pk
select * from table2 where pk in list of keys

